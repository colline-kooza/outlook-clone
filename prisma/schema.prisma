generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum UserRole {
  USER
  ADMIN
  SERVICE_PROVIDER
}

model Email {
  id        String   @id @default(cuid())
  subject   String
  content   String
  fromId    String
  toId      String
  from      User     @relation("SentEmails", fields: [fromId], references: [id])
  to        User     @relation("ReceivedEmails", fields: [toId], references: [id])
  read      Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id             String    @id @default(cuid())
  name           String
  firstName      String?
  lastName       String?
  phone          String?
  email          String    @unique
  emailVerified  DateTime?
  image          String?
  role           UserRole  @default(USER)
  password       String?
  status         Boolean   @default(true)
  accounts       Account[]
  sessions       Session[]
  isVerfied      Boolean   @default(false)
  token          Int?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  sentEmails     Email[]   @relation("SentEmails")
  receivedEmails Email[]   @relation("ReceivedEmails")
}

model Product {
  id           String   @id @default(cuid())
  title        String
  slug         String   @unique
  description  String?
  category     Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId   String
  qty          Int?
  sellingPrice Float
  images       String[]
  createdAt    DateTime @default(now()) @map("createdAt")
  updatedAt    DateTime @updatedAt @map("updatedAt")
}

model Category {
  id          String    @id @default(cuid())
  title       String
  slug        String    @unique
  imageUrl    String?
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt
  Item        Product[]
}
